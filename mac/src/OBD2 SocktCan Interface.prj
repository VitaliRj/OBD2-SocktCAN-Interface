<deployment-project plugin="plugin.toolbox" plugin-version="1.0">
  <configuration file="/Users/vr/Desktop/Git/OBD2-SocktCan-Interface/mac/src/OBD2 SocktCan Interface.prj" location="/Users/vr/Desktop/Git/OBD2-SocktCan-Interface/mac/src" name="OBD2 SocktCan Interface" target="target.toolbox" target-name="Package Toolbox">
    <param.appname>OBD2 SocktCan Interface</param.appname>
    <param.authnamewatermark>Vitali Rjasanzew-Frey</param.authnamewatermark>
    <param.email>vitali_r@mailbox.org</param.email>
    <param.company />
    <param.summary>This Simulink Add-On/Toolbox provides an OBD2 (On-board diagnostics) block
for basic communication, data logging and vehicle diagnostics.</param.summary>
    <param.description>This Blockset is based on the OBD2 SAE J/1979 standard.
It is able to generate OBD2 request messages and listen to the appropriate response from the vehicle.

The CAN bus interface works with SocketCan, and e.g. Raspberry, Beaglebone etc.
SocketCan documentation can be found here:
https://en.wikipedia.org/wiki/SocketCAN

The outputs are based on the following OBD2 documentation:
https://en.wikipedia.org/wiki/OBD-II_PIDs

Example:
To get the engine RPM, the inputs should be:
OBD2_PID = 12 and OBD2_Mode = 1.

The Engine RPM can be calculated with the following outputs:
(256*A + B)/4. The formulars can be found in the wiki article.

Note: "not all vehicles will support all PIDs and there can be manufacturer-defined custom PIDs", as stated in the wiki.

Author: Vitali Rjasanzew-Frey</param.description>
    <param.screenshot>${PROJECT_ROOT}/logo.png</param.screenshot>
    <param.version>1.0</param.version>
    <param.output>${PROJECT_ROOT}/OBD2 SocktCan Interface.mltbx</param.output>
    <param.products.name>
      <item>MATLAB</item>
      <item>Simulink</item>
    </param.products.name>
    <param.products.id>
      <item>1</item>
      <item>2</item>
    </param.products.id>
    <param.products.version>
      <item>9.3</item>
      <item>9.0</item>
    </param.products.version>
    <param.platforms />
    <param.guid>794cc312-1220-4881-83e3-5d90b685541e</param.guid>
    <param.exclude.filters>% List files contained in your toolbox folder that you would like to exclude
% from packaging.  Excludes should be listed relative to the toolbox folder.
% Some examples of how to specify excludes are provided below:
%
% A single file in the toolbox folder:
% .svn
%
% A single file in a subfolder of the toolbox folder:
% example/.svn
%
% All files in a subfolder of the toolbox folder:
% example/*
%
% All files of a certain name in all subfolders of the toolbox folder:
% **/.svn
%
% All files matching a pattern in all subfolders of the toolbox folder:
% **/*.bak
%</param.exclude.filters>
    <param.examples>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;examples&gt;
   &lt;exampleCategory name="First Section"&gt;
      &lt;example name="Example" type="html"&gt;
         &lt;file type="source"/&gt;
         &lt;file type="main"/&gt;
         &lt;file type="thumbnail"/&gt;
      &lt;/example&gt;
   &lt;/exampleCategory&gt;
&lt;/examples&gt;</param.examples>
    <param.demosxml />
    <param.apps />
    <param.registered.apps />
    <param.docs />
    <param.getting.started.guide>${PROJECT_ROOT}/doc/GettingStarted.mlx</param.getting.started.guide>
    <param.matlabpath.excludes />
    <param.javaclasspath.excludes />
    <unset>
      <param.company />
      <param.version />
      <param.output />
      <param.platforms />
      <param.demosxml />
      <param.apps />
      <param.registered.apps />
      <param.docs />
      <param.matlabpath.excludes />
      <param.javaclasspath.excludes />
    </unset>
    <fileset.rootdir>
      <file>/Users/vr/Desktop/Git/OBD2-SocktCan-Interface/mac/src</file>
    </fileset.rootdir>
    <fileset.rootfiles>
      <file>${PROJECT_ROOT}/Example.slx</file>
      <file>${PROJECT_ROOT}/Example_MultiPID.slx</file>
      <file>${PROJECT_ROOT}/OBD2_SocketCan_Library.slx</file>
      <file>${PROJECT_ROOT}/demos.xml</file>
      <file>${PROJECT_ROOT}/doc</file>
      <file>${PROJECT_ROOT}/logo.png</file>
      <file>${PROJECT_ROOT}/obd2RawJ1979.c</file>
      <file>${PROJECT_ROOT}/obd2RawJ1979.mexmaci64</file>
      <file>${PROJECT_ROOT}/obd2RawJ1979.tlc</file>
      <file>${PROJECT_ROOT}/obd2RawJ1979_wrapper.c</file>
      <file>${PROJECT_ROOT}/run_this_to_add_lib.m</file>
      <file>${PROJECT_ROOT}/run_this_to_compile.m</file>
      <file>${PROJECT_ROOT}/slblocks.m</file>
    </fileset.rootfiles>
    <fileset.depfun.included />
    <fileset.depfun.excluded />
    <fileset.package />
    <build-deliverables>
      <file location="/Users/vr/Desktop/Git/OBD2-SocktCan-Interface/mac/src" name="OBD2 SocktCan Interface.mltbx" optional="false">/Users/vr/Desktop/Git/OBD2-SocktCan-Interface/mac/src/OBD2 SocktCan Interface.mltbx</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>/Applications/MATLAB_R2017b.app</root>
      <toolboxes>
        <toolbox name="matlabcoder" />
      </toolboxes>
      <toolbox>
        <matlabcoder>
          <enabled>true</enabled>
        </matlabcoder>
      </toolbox>
    </matlab>
    <platform>
      <unix>true</unix>
      <mac>true</mac>
      <windows>false</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>false</linux>
      <solaris>false</solaris>
      <osver>10.13.4</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>maci64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>